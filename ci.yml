name: Manuscript + Lean CI

on:
  push:
    paths:
      - '**.lean'
      - '**.tex'
      - '**.py'
      - '.github/workflows/ci.yml'
      - 'lakefile.lean'
      - 'Makefile'
      - 'VERSION'
  pull_request:
    paths:
      - '**.lean'
      - '**.tex'
      - '**.py'
      - '.github/workflows/ci.yml'
      - 'lakefile.lean'
      - 'Makefile'
      - 'VERSION'

jobs:
  manuscript:
    runs-on: ubuntu-latest
    name: Structural + Hygiene Checks

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v3

      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: 📦 Install Python dependencies
        run: |
          pip install -r scripts/requirements.txt || true

      - name: 📦 Install LaTeX + checkcites
        run: |
          sudo apt-get update
          sudo apt-get install -y latexmk texlive-full
          pip install checkcites

      - name: 🧪 Run full integrity suite (Makefile-driven)
        run: make all

      - name: 📄 Check LaTeX log for warnings/errors
        run: python tests/check_latex_log.py

  lean-verify:
    runs-on: ubuntu-latest
    name: Formal Lean Build

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v3

      - name: 🧠 Set up Lean
        uses: leanprover/lean-action@v1
        with:
          lean-version: leanprover/lean4:stable

      - name: 🛠 Build Lean project
        run: |
          lake exe cache get
          lake build

      - name: 🔍 Check for incomplete proofs
        run: |
          ! grep -r "sorry" SpectralProof/

  snapshot-artifact:
    needs: [manuscript, lean-verify]
    if: env.SNAPSHOT == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v3
      - name: 🛠 Set up Rust
        uses: actions/setup-rust@v1
        with:
          rust-version: stable
      - name: 📦 Build snapshot
        run: cargo run --bin bourbaki_snapshot -- create --output snapshots
      - name: ✅ Verify snapshot
        run: |
          ARCHIVE=$(ls snapshots/*.tar.zst | head -n 1)
          cargo run --bin bourbaki_snapshot -- verify --archive $ARCHIVE
      - name: 📤 Upload snapshot
        uses: actions/upload-artifact@v3
        with:
          name: proof-snapshot
          path: snapshots/*.tar.zst
